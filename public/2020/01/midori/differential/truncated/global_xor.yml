---
comments: |
  Model: Midori Global XOR \\
  Note version: \\
    Start values at the minimal value of the previous round \\
    I had plain text and cipher text blocks to the problem resolution, global xor is able to perform stronger filtering
    with this additionnal information.
    Add Midori 64 bits
requirements:
  - name: gradle
    version: 4.9
  - name: java
    version: 1.8
dev_path: '/home/rloic/IdeaProjects/thesis-code'
shortcuts:
  gradle_conf: 'build_exp.gradle'
  gradle_task: 'jar'
  exec: 'Experiment-1.0-SNAPSHOT.jar'
  build: '{PROJECT}/build/libs'
  jvm_args: '-Xmx16g -Duser.country=UK -Duser.language=en'
  java: 'java {jvm_args} -cp'
versioning:
  repository: https://github.com/rloic/thesis-code
  authentication: true
  commit: 268e72ee0d98aea7f271da7b051af286d94fcef2
compile: 'gradle --build-file {PROJECT}/{gradle_conf} {gradle_task}'
execute: '{java} {build}/{exec} com.github.rloic.kt.midori.app.truncated.DifferentialKt'
experiments:
  - name: "Midori-64"
    parameters: [model=GlobalXOR, version=Midori-64, r=20, sb=32, heuristic=Custom, INCREMENTAL=true]
  - name: "Midori-128"
    parameters: [model=GlobalXOR, version=Midori-128, r=20, sb=64, heuristic=Custom, INCREMENTAL=true]
measures: []
stats: [time]
iterations: 1
timeout:
  duration: 12
  unit: HOURS
